<link rel="import" href="/js/components/polymer/polymer.html">
<link rel="import" href="/js/components/core-ajax/core-ajax.html">

polymer-element(name='sbb-product-tb', attributes='product counter active permalink variant comments ispublisher')
  template
    link(href='//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css', rel='stylesheet')
    core-ajax#ajax(url='/product/{{product}}/vote', params='{"ref":"vote"}', handleas='json', on-core-response='{{voted}}')
    != css('styles')
    template(bind, if="{{ variant=='grid' }}")
      ul.list-unstyled.list-inline.mb0.mt5.ml0.mr0.list-on-left.small
        li
          span.notimp.bind(on-tap='{{clickAction}}')
            i.fa.fa-star
            | #{__("Favourite")} ({{counter}})
        li
          a.notimp(href='/product/{{permalink}}')
            i.fa.fa-shopping-cart
            | #{__("Special offers")}
    template(bind, if="{{ variant=='preview' }}")
      ul.list-unstyled.list-inline.m0.list-on-left
        li
          span.bind(on-tap='{{clickAction}}')
            i.fa.fa-star
            | #{__("Favourite")} ({{counter}})
        li
          a(href='{{postUrl}}', target='_blank')
            i.fa.fa-rss
            | Przeczytaj na blogu
        li
          a(href='/product/{{permalink}}#comments')
            i.fa.fa-comment
            | #{__("Add comment")} (<span id="commentsCounter">{{comments}}</span>)
        //- li
          a(href='/product/{{permalink}}/edit')
            i.fa.fa-share
            | Share
        li(bind, hidden?="{{ !ispublisher }}")
          a(href='/product/{{permalink}}/edit')
            i.fa.fa-pencil
            | #{__("Edit")}
        //- li(hidden?="{{ !ispublisher }}")
          a(href='')
            i.fa.fa-code
            | Get Widget

  script.

    Polymer('sbb-product-tb', {

      active: false,
      counter: '0',
      product: '',
      variant: 'grid',
      comments: '0',
      ispublisher: this.ispublisher=='false'?false:true,

      activeChanged: function() {
        // console.log('zmiana');
        this.classList.toggle('selected', this.active);
      },

      clickAction: function(e) {
        if(window.SBB_USER&&window.SBB_USER._id) {
          var ajax = document.querySelector("core-ajax");
          this.$.ajax.go()
        } else {
          location = '/login';
          //- swal({title: "Please sign in...", text: "You need to sign in to proceed.", type: "error", confirmButtonText: "OK" });
        }
      },

      voted: function(e, data) {
        //- console.log('vote', data);
        // data.response
        // this.active = true;
        // this.counter++;
        this.counter = data.response.meta.upvotes;
        this.active = !this.active;
        // this.activeChanged();
      }

    });


